{"ast":null,"code":"import axios from \"axios\";\nimport { ADD_POST, GET_ERRORS, CLEAR_ERRORS, GET_POSTS, GET_POST, POST_LOADING, DELETE_POST } from \"./types\"; // Add Post\n\nexport const addPost = postData => dispatch => {\n  dispatch(clearErrors());\n  axios.post(\"/api/posts\", postData).then(res => dispatch({\n    type: ADD_POST,\n    payload: res.data\n  })).catch(err => dispatch({\n    type: GET_ERRORS,\n    payload: err.response.data\n  }));\n}; // Get Posts\n\nexport const getPosts = () => dispatch => {\n  dispatch(setPostLoading());\n  axios.get(\"/api/posts\").then(res => dispatch({\n    type: GET_POSTS,\n    payload: res.data\n  })).catch(err => dispatch({\n    type: GET_POSTS,\n    payload: null\n  }));\n}; // Get Post\n\nexport const getPost = id => dispatch => {\n  dispatch(setPostLoading());\n  axios.get(\"/api/posts/\".concat(id)).then(res => dispatch({\n    type: GET_POST,\n    payload: res.data\n  })).catch(err => dispatch({\n    type: GET_POST,\n    payload: null\n  }));\n}; // Delete Post\n\nexport const deletePost = id => dispatch => {\n  axios.delete(\"/api/posts/\".concat(id)).then(res => dispatch({\n    type: DELETE_POST,\n    payload: id\n  })).catch(err => dispatch({\n    type: GET_ERRORS,\n    payload: err.response.data\n  }));\n}; // Add Like\n\nexport const addLike = id => dispatch => {\n  axios.post(\"/api/posts/like/\".concat(id)).then(res => dispatch(getPosts())).catch(err => dispatch({\n    type: GET_ERRORS,\n    payload: err.response.data\n  }));\n}; // Remove Like\n\nexport const removeLike = id => dispatch => {\n  axios.post(\"/api/posts/unlike/\".concat(id)).then(res => dispatch(getPosts())).catch(err => dispatch({\n    type: GET_ERRORS,\n    payload: err.response.data\n  }));\n}; // Add Comment\n\nexport const addComment = (postId, commentData) => dispatch => {\n  dispatch(clearErrors());\n  axios.post(\"/api/posts/comment/\".concat(postId), commentData).then(res => dispatch({\n    type: GET_POST,\n    payload: res.data\n  })).catch(err => dispatch({\n    type: GET_ERRORS,\n    payload: err.response.data\n  }));\n}; // Delete Comment\n\nexport const deleteComment = (postId, commentId) => dispatch => {\n  axios.delete(\"/api/posts/comment/\".concat(postId, \"/\").concat(commentId)).then(res => dispatch({\n    type: GET_POST,\n    payload: res.data\n  })).catch(err => dispatch({\n    type: GET_ERRORS,\n    payload: err.response.data\n  }));\n}; // Set loading state\n\nexport const setPostLoading = () => {\n  return {\n    type: POST_LOADING\n  };\n}; // Clear errors\n\nexport const clearErrors = () => {\n  return {\n    type: CLEAR_ERRORS\n  };\n};","map":{"version":3,"sources":["C:\\Users\\kaleem ullah malik\\Desktop\\devconnector\\client\\src\\actions\\postActions.js"],"names":["axios","ADD_POST","GET_ERRORS","CLEAR_ERRORS","GET_POSTS","GET_POST","POST_LOADING","DELETE_POST","addPost","postData","dispatch","clearErrors","post","then","res","type","payload","data","catch","err","response","getPosts","setPostLoading","get","getPost","id","deletePost","delete","addLike","removeLike","addComment","postId","commentData","deleteComment","commentId"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\n\r\nimport {\r\n  ADD_POST,\r\n  GET_ERRORS,\r\n  CLEAR_ERRORS,\r\n  GET_POSTS,\r\n  GET_POST,\r\n  POST_LOADING,\r\n  DELETE_POST\r\n} from \"./types\";\r\n\r\n// Add Post\r\nexport const addPost = postData => dispatch => {\r\n  dispatch(clearErrors());\r\n  axios\r\n    .post(\"/api/posts\", postData)\r\n    .then(res =>\r\n      dispatch({\r\n        type: ADD_POST,\r\n        payload: res.data\r\n      })\r\n    )\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n\r\n// Get Posts\r\nexport const getPosts = () => dispatch => {\r\n  dispatch(setPostLoading());\r\n  axios\r\n    .get(\"/api/posts\")\r\n    .then(res =>\r\n      dispatch({\r\n        type: GET_POSTS,\r\n        payload: res.data\r\n      })\r\n    )\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_POSTS,\r\n        payload: null\r\n      })\r\n    );\r\n};\r\n\r\n// Get Post\r\nexport const getPost = id => dispatch => {\r\n  dispatch(setPostLoading());\r\n  axios\r\n    .get(`/api/posts/${id}`)\r\n    .then(res =>\r\n      dispatch({\r\n        type: GET_POST,\r\n        payload: res.data\r\n      })\r\n    )\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_POST,\r\n        payload: null\r\n      })\r\n    );\r\n};\r\n\r\n// Delete Post\r\nexport const deletePost = id => dispatch => {\r\n  axios\r\n    .delete(`/api/posts/${id}`)\r\n    .then(res =>\r\n      dispatch({\r\n        type: DELETE_POST,\r\n        payload: id\r\n      })\r\n    )\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n\r\n// Add Like\r\nexport const addLike = id => dispatch => {\r\n  axios\r\n    .post(`/api/posts/like/${id}`)\r\n    .then(res => dispatch(getPosts()))\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n\r\n// Remove Like\r\nexport const removeLike = id => dispatch => {\r\n  axios\r\n    .post(`/api/posts/unlike/${id}`)\r\n    .then(res => dispatch(getPosts()))\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n\r\n// Add Comment\r\nexport const addComment = (postId, commentData) => dispatch => {\r\n  dispatch(clearErrors());\r\n  axios\r\n    .post(`/api/posts/comment/${postId}`, commentData)\r\n    .then(res =>\r\n      dispatch({\r\n        type: GET_POST,\r\n        payload: res.data\r\n      })\r\n    )\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n\r\n// Delete Comment\r\nexport const deleteComment = (postId, commentId) => dispatch => {\r\n  axios\r\n    .delete(`/api/posts/comment/${postId}/${commentId}`)\r\n    .then(res =>\r\n      dispatch({\r\n        type: GET_POST,\r\n        payload: res.data\r\n      })\r\n    )\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n\r\n// Set loading state\r\nexport const setPostLoading = () => {\r\n  return {\r\n    type: POST_LOADING\r\n  };\r\n};\r\n\r\n// Clear errors\r\nexport const clearErrors = () => {\r\n  return {\r\n    type: CLEAR_ERRORS\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}