{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kaleem ullah malik\\\\Desktop\\\\devconnector\\\\client\\\\src\\\\components\\\\profile\\\\ProfileGithub.js\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nclass ProfileGithub extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      const username = this.props.username;\n      const _this$state = this.state,\n            count = _this$state.count,\n            sort = _this$state.sort,\n            clientId = _this$state.clientId,\n            clientSecret = _this$state.clientSecret;\n      fetch(\"http://api.github.com/users/\".concat(username, \"/repos?per_page=\").concat(count, \"&{sort}&client_id=\").concat(clientId, \"&client_secret=\").concat(clientSecret)).then(res => res.json()).then(data => {\n        this.setState({\n          repos: data\n        });\n      }).catch(err => console.log(err));\n    };\n\n    this.state = {\n      clientId: \"09dfce273fc05d9cb83a\",\n      clientSecret: \"8e03f62adaeb49357a18ea71fb6746c49b47d53f\",\n      count: 5,\n      sort: \"created:asc\",\n      repos: []\n    };\n  }\n\n  render() {\n    const repos = this.state.repos;\n    const repoItems = repos.map(repo => React.createElement(\"div\", {\n      key: repo.id,\n      className: \"card card-body mb-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: repo.html_url,\n      className: \"text-info\",\n      target: \"_blank\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, repo.name)), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, repo.description)), React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"badge badge-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"Stars:\", repo.stargazers_count), React.createElement(\"span\", {\n      className: \"badge badge-secondart mr-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"watchers:\", repo.watchers_count), React.createElement(\"span\", {\n      className: \"badge badge-success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Forks:\", repo.forks_count)))));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      className: \"mb-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"latext github repos\"), repoItems);\n  }\n\n}\n\nProfileGithub.propTypes = {\n  username: PropTypes.string.isRequired\n};\nexport default ProfileGithub;","map":{"version":3,"sources":["C:\\Users\\kaleem ullah malik\\Desktop\\devconnector\\client\\src\\components\\profile\\ProfileGithub.js"],"names":["React","Component","Link","PropTypes","ProfileGithub","constructor","props","componentDidMount","username","state","count","sort","clientId","clientSecret","fetch","then","res","json","data","setState","repos","catch","err","console","log","render","repoItems","map","repo","id","html_url","name","description","stargazers_count","watchers_count","forks_count","propTypes","string","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass ProfileGithub extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      clientId: \"09dfce273fc05d9cb83a\",\r\n      clientSecret: \"8e03f62adaeb49357a18ea71fb6746c49b47d53f\",\r\n      count: 5,\r\n      sort: \"created:asc\",\r\n      repos: []\r\n    };\r\n  }\r\n  componentDidMount = () => {\r\n    const { username } = this.props;\r\n    const { count, sort, clientId, clientSecret } = this.state;\r\n    fetch(\r\n      `http://api.github.com/users/${username}/repos?per_page=${count}&{sort}&client_id=${clientId}&client_secret=${clientSecret}`\r\n    )\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        this.setState({ repos: data });\r\n      })\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  render() {\r\n    const { repos } = this.state;\r\n    const repoItems = repos.map(repo => (\r\n      <div key={repo.id} className=\"card card-body mb-2\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <h4>\r\n              <Link to={repo.html_url} className=\"text-info\" target=\"_blank\">\r\n                {repo.name}\r\n              </Link>\r\n            </h4>\r\n            <p>{repo.description}</p>\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <span className=\"badge badge-info\">\r\n              Stars:{repo.stargazers_count}\r\n            </span>\r\n            <span className=\"badge badge-secondart mr-1\">\r\n              watchers:{repo.watchers_count}\r\n            </span>\r\n            <span className=\"badge badge-success\">\r\n              Forks:{repo.forks_count}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    ));\r\n\r\n    return (\r\n      <div>\r\n        <hr />\r\n        <h3 className=\"mb-4\">latext github repos</h3>\r\n        {repoItems}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nProfileGithub.propTypes = {\r\n  username: PropTypes.string.isRequired\r\n};\r\n\r\nexport default ProfileGithub;\r\n"]},"metadata":{},"sourceType":"module"}